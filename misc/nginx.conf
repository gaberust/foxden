user nobody nogroup; worker_processes 1;
error_log /var/log/nginx/error.log; pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  accept_mutex off;
}

http {
  server_tokens off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  
  log_format bodylog '$remote_addr - $remote_user [$time_local] '
      '"$request" $status $body_bytes_sent '
      '"$http_referer" "$http_user_agent" $request_time '
      '<"$request_body" >"$resp_body"';

  lua_need_request_body on;

  set $resp_body "";
  body_filter_by_lua '
    local resp_body = string.sub(ngx.arg[1], 1, 1000)
    ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
    if ngx.arg[2] then
      ngx.var.resp_body = ngx.ctx.buffered
    end
  ';
  
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 5;
  tcp_nodelay on;
  gzip on;
  gzip_vary on;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;
  
  upstream unicorn_server {
    server unix:/var/www/foxden/tmp/sockets/unicorn.sock
        fail_timeout=0;
  }
  
  server {
    server_name foxbadge.com;
    root /var/www/foxden/public;
    listen 80;
    client_max_body_size 4G;
    keepalive_timeout 5;
    access_log  /var/log/nginx/server.log bodylog;
    location / {
      try_files $uri @app;
    }
    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://unicorn_server;
    }
  }
}
